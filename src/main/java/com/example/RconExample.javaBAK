// Suppress package declaration warning - this is a false positive
package com.example;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Example class demonstrating how to use the RconClient.
 * This shows how to connect to a server and send various commands.
 */
public class RconExample {
    
    private static final Logger logger = LoggerFactory.getLogger(RconExample.class);
    
    public static void main(String[] args) {
        // Example usage of RconClient
        String host = "voidrunner.zapto.org";
        int port = 25575;
        String password = "password"; // Replace with actual password
        
        RconClient client = new RconClient(host, port, password);
        
        try {
            System.out.println("Connecting to " + host + ":" + port);
            
            if (client.connect()) {
                System.out.println("Connected successfully!");
                
                // Example commands you can send
                String[] commands = {
                    "players",      // Get player list
                    "status",       // Get server status
                    "info",         // Get server info
                    "version",      // Get server version
                    "map",          // Get current map
                    "sv_cheats",    // Check if cheats are enabled
                    "sv_gravity",   // Check gravity setting
                    "mp_timelimit"  // Check time limit
                };
                
                for (String command : commands) {
                    System.out.println("\n--- " + command + " ---");
                    String response = client.sendCommand(command);
                    System.out.println("Response: " + response);
                    
                    // Add a small delay between commands
                    Thread.sleep(500);
                }
                
            } else {
                System.out.println("Failed to connect. Check your password and server settings.");
            }
            
        } catch (Exception e) {
            logger.error("Error during RCON communication: {}", e.getMessage(), e);
            System.out.println("Error: " + e.getMessage());
        } finally {
            client.disconnect();
            System.out.println("Disconnected from server");
        }
    }
} 